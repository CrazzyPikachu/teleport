apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "teleport.fullname" . }}-node
  labels:
{{ include "teleport.labels" . | indent 4 }}
{{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.nodesPerCluster }}
  template:
    metadata:
      labels:
        app: {{ template "teleport.name" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        checksum/config: {{ toYaml .Values.config | sha256sum }}
{{- if .Values.annotations }}
{{ toYaml .Values.annotations | indent 8 }}
{{- end }}
    spec:
      containers:
      - name: {{ .Chart.Name }}-node
        image: "{{ .Values.node.image.repository }}:{{ tpl .Values.node.image.tag . }}"
        imagePullPolicy: {{ .Values.node.image.pullPolicy }}
        args:
{{- if .Values.extraArgs }}
{{ toYaml .Values.extraArgs | indent 8 }}
{{- end }}
        env:
{{- range $key, $value := .Values.extraVars }}
        - name: {{ $key }}
          value: {{ $value }}
{{- end }}
        # See https://gravitational.com/teleport/docs/admin-guide/#ports
        ports:
{{- range $key, $port := .Values.ports.node }}
        - name: {{ $key }}
{{ toYaml $port | indent 10 }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - mountPath: /etc/teleport
          name: {{ template "teleport.fullname" . }}-config
          readOnly: true
        - mountPath: /var/lib/teleport
          name: {{ template "teleport.fullname" . }}-storage
        - mountPath: /var/lib/tokens/node
          name: {{ template "teleport.fullname" . }}-node-join-token
        - mountPath: /var/lib/tokens/trustedcluster
          name: {{ template "teleport.fullname" . }}-trustedcluster-join-token
        - mountPath: /var/lib/tokens/ca-pin
          name: {{ template "teleport.fullname" . }}-ca-pin
{{- if .Values.extraVolumeMounts }}
{{ toYaml .Values.extraVolumeMounts | indent 8 }}
{{- end }}
      volumes:
      - name: {{ template "teleport.fullname" . }}-config
        configMap:
          name: {{ template "teleport.fullname" . }}-node-config
      - name: {{ template "teleport.fullname" . }}-storage
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (printf "%s-%s" (include "teleport.fullname" .) "storage") }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: {{ template "teleport.fullname" . }}-node-join-token
        secret:
          secretName: {{ .Values.mainClusterName }}-node-join-token
      - name: {{ template "teleport.fullname" . }}-trustedcluster-join-token
        secret:
          secretName: {{ .Values.mainClusterName }}-trustedcluster-join-token
      - name: {{ template "teleport.fullname" . }}-ca-pin
        secret:
          secretName: {{ .Values.mainClusterName }}-ca-pin
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 6 }}
{{- end }}
{{- if .Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.pullSecrets | indent 6 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 6 }}
{{- end }}
      serviceAccountName: {{ template "teleport.serviceAccountName" . }}
